openapi: 3.0.1
info:
  title: Chatwoot
  description: This is the API documentation for Chatwoot server.
  termsOfService: https://www.chatwoot.com/terms-of-service/
  contact:
    email: hello@chatwoot.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
- url: https://app.chatwoot.com/
security:
- userApiKey: []
paths:
  /platform/api/v1/accounts:
    post:
      tags:
      - Accounts
      summary: Create an Account
      description: Create an Account
      operationId: create-an-account
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/account_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/platform_account'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/accounts/{account_id}:
    get:
      tags:
      - Accounts
      summary: Get an account details
      description: Get the details of an account
      operationId: get-details-of-an-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/platform_account'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given account does not exist
          content: {}
      security:
      - platformAppApiKey: []
    delete:
      tags:
      - Accounts
      summary: Delete an Account
      description: Delete an Account
      operationId: delete-an-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The account does not exist
          content: {}
      security:
      - platformAppApiKey: []
    patch:
      tags:
      - Accounts
      summary: Update an account
      description: Update an account's attributes
      operationId: update-an-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/account_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/platform_account'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/accounts/{account_id}/account_users:
    get:
      tags:
      - Account Users
      summary: List all Account Users
      description: List all account users
      operationId: list-all-account-users
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of account users
                items:
                  type: object
                  properties:
                    account_id:
                      type: integer
                      description: The ID of the user
                    user_id:
                      type: integer
                      description: The ID of the user
                    role:
                      type: string
                      description: whether user is an administrator or agent
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
    post:
      tags:
      - Account Users
      summary: Create an Account User
      description: Create an Account User
      operationId: create-an-account-user
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - role
              - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user
                role:
                  type: string
                  description: whether user is an administrator or agent
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  account_id:
                    type: integer
                    description: The ID of the user
                  user_id:
                    type: integer
                    description: The ID of the user
                  role:
                    type: string
                    description: whether user is an administrator or agent
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
    delete:
      tags:
      - Account Users
      summary: Delete an Account User
      description: Delete an Account User
      operationId: delete-an-account-user
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - user_id
              type: object
              properties:
                user_id:
                  type: integer
                  description: The ID of the user
        required: true
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The account does not exist
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/agent_bots:
    get:
      tags:
      - AgentBots
      summary: List all AgentBots
      description: List all agent bots available
      operationId: list-all-agent-bots
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of agent bots
                items:
                  $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
    post:
      tags:
      - AgentBots
      summary: Create an Agent Bot
      description: Create an agent bot
      operationId: create-an-agent-bot
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/agent_bot_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/agent_bots/{id}:
    get:
      tags:
      - AgentBots
      summary: Get an agent bot details
      description: Get the details of an agent bot
      operationId: get-details-of-a-single-agent-bot
      parameters:
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given agent bot ID does not exist
          content: {}
      security:
      - platformAppApiKey: []
    delete:
      tags:
      - AgentBots
      summary: Delete an AgentBot
      description: Delete an AgentBot
      operationId: delete-an-agent-bot
      parameters:
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The agent bot does not exist
          content: {}
      security:
      - platformAppApiKey: []
    patch:
      tags:
      - AgentBots
      summary: Update an agent bot
      description: Update an agent bot's attributes
      operationId: update-an-agent-bot
      parameters:
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/agent_bot_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/users:
    post:
      tags:
      - Users
      summary: Create a User
      description: Create a User
      operationId: create-a-user
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/user_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/users/{id}:
    get:
      tags:
      - Users
      summary: Get an user details
      description: Get the details of an user
      operationId: get-details-of-a-user
      parameters:
      - name: id
        in: path
        description: The numeric ID of the user on the platform
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given user does not exist
          content: {}
      security:
      - platformAppApiKey: []
    delete:
      tags:
      - Users
      summary: Delete a User
      description: Delete a User
      operationId: delete-a-user
      parameters:
      - name: id
        in: path
        description: The numeric ID of the user on the platform
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The user does not exist
          content: {}
      security:
      - platformAppApiKey: []
    patch:
      tags:
      - Users
      summary: Update a user
      description: Update a user's attributes
      operationId: update-a-user
      parameters:
      - name: id
        in: path
        description: The numeric ID of the user on the platform
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/user_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Unauthorized
          content: {}
      security:
      - platformAppApiKey: []
      x-codegen-request-body-name: data
  /platform/api/v1/users/{id}/login:
    get:
      tags:
      - Users
      summary: Get User SSO Link
      description: Get the sso link of a user
      operationId: get-sso-url-of-a-user
      parameters:
      - name: id
        in: path
        description: The numeric ID of the user on the platform
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: SSO url to autenticate the user
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given user does not exist
          content: {}
      security:
      - platformAppApiKey: []
  /public/api/v1/inboxes/{inbox_identifier}:
    get:
      tags:
      - Inbox API
      summary: Inbox details
      description: Get the details of an inbox
      operationId: get-details-of-a-inbox
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_inbox'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given inbox does not exist
          content: {}
      security: []
  /public/api/v1/inboxes/{inbox_identifier}/contacts:
    post:
      tags:
      - Contacts API
      summary: Create a contact
      description: Create a contact
      operationId: create-a-contact
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/public_contact_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_contact'
        "401":
          description: Unauthorized
          content: {}
      security: []
      x-codegen-request-body-name: data
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}:
    get:
      tags:
      - Contacts API
      summary: Get a contact
      description: Get the details of a contact
      operationId: get-details-of-a-contact
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_contact'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given contact does not exist
          content: {}
      security: []
    patch:
      tags:
      - Contacts API
      summary: Update a contact
      description: Update a contact's attributes
      operationId: update-a-contact
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/public_contact_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_contact'
        "401":
          description: Unauthorized
          content: {}
      security: []
      x-codegen-request-body-name: data
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations:
    get:
      tags:
      - Conversations API
      summary: List all conversations
      description: List all conversations for the contact
      operationId: list-all-contact-conversations
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of conversations
                items:
                  $ref: '#/components/schemas/public_conversation'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Conversations API
      summary: Create a conversation
      description: Create a conversation
      operationId: create-a-conversation
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/public_conversation_create_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_conversation'
        "401":
          description: Unauthorized
          content: {}
      security: []
      x-codegen-request-body-name: data
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages:
    get:
      tags:
      - Messages API
      summary: List all messages
      description: List all messages in the conversation
      operationId: list-all-converation-messages
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of messages
                items:
                  $ref: '#/components/schemas/public_message'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Messages API
      summary: Create a message
      description: Create a message
      operationId: create-a-message
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/public_message_create_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_message'
        "401":
          description: Unauthorized
          content: {}
      security: []
      x-codegen-request-body-name: data
  /public/api/v1/inboxes/{inbox_identifier}/contacts/{contact_identifier}/conversations/{conversation_id}/messages/{message_id}:
    patch:
      tags:
      - Messages API
      summary: Update a message
      description: Update a message
      operationId: update-a-message
      parameters:
      - name: inbox_identifier
        in: path
        description: The identifier obtained from API inbox channel
        required: true
        schema:
          type: string
      - name: contact_identifier
        in: path
        description: The source id of contact obtained on contact create
        required: true
        schema:
          type: string
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      - name: message_id
        in: path
        description: The numeric ID of the message
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/public_message_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/public_message'
        "401":
          description: Unauthorized
          content: {}
      security: []
      x-codegen-request-body-name: data
  /survey/responses/{conversation_uuid}:
    get:
      tags:
      - CSAT Survey Page
      summary: Get CSAT survey page
      description: "You can redirect the client to this URL, instead of implementing\
        \ the CSAT survey component yourself."
      operationId: get-csat-survey-page
      parameters:
      - name: conversation_uuid
        in: path
        description: The uuid of the conversation
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
      security: []
  /api/v1/accounts/{account_id}/agent_bots:
    get:
      tags:
      - Account AgentBots
      summary: List all AgentBots
      description: List all agent bots available for the current account
      operationId: list-all-account-agent-bots
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of agent bots
                items:
                  $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Account AgentBots
      summary: Create an Agent Bot
      description: Create an agent bot in the account
      operationId: create-an-account-agent-bot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/agent_bot_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/agent_bots/{id}:
    get:
      tags:
      - Account AgentBots
      summary: Get an agent bot details
      description: Get the details of an agent bot in the account
      operationId: get-details-of-a-single-account-agent-bot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given agent bot ID does not exist in the account
          content: {}
    delete:
      tags:
      - Account AgentBots
      summary: Delete an AgentBot
      description: Delete an AgentBot from the account
      operationId: delete-an-account-agent-bot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The agent bot does not exist in the account
          content: {}
    patch:
      tags:
      - Account AgentBots
      summary: Update an agent bot
      description: Update an agent bot's attributes
      operationId: update-an-account-agent-bot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the agentbot to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/agent_bot_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/agents:
    get:
      tags:
      - Agents
      summary: List Agents in Account
      description: Get Details of Agents in an Account
      operationId: get-account-agents
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all active agents
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Agents
      summary: Add a New Agent
      description: Add a new Agent to Account
      operationId: add-new-agent-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - email
              - name
              - role
              type: object
              properties:
                name:
                  type: string
                  description: Full Name of the agent
                email:
                  type: string
                  description: Email of the Agent
                role:
                  type: string
                  description: Whether its administrator or agent
                  enum:
                  - agent
                  - administrator
                availability_status:
                  type: string
                  description: The availability setting of the agent.
                  enum:
                  - available
                  - busy
                  - offline
                auto_offline:
                  type: boolean
                  description: Whether the availability status of agent is configured
                    to go offline automatically when away.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/agents/{id}:
    delete:
      tags:
      - Agents
      summary: Remove an Agent from Account
      description: Remove an Agent from Account
      operationId: delete-agent-from-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the agent to be deleted
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: Agent not found
          content: {}
      security:
      - userApiKey: []
    patch:
      tags:
      - Agents
      summary: Update Agent in Account
      description: Update an Agent in Account
      operationId: update-agent-in-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the agent to be updated.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - role
              type: object
              properties:
                role:
                  type: string
                  description: Whether its administrator or agent
                  enum:
                  - agent
                  - administrator
                availability:
                  type: string
                  description: The availability setting of the agent.
                  enum:
                  - available
                  - busy
                  - offline
                auto_offline:
                  type: boolean
                  description: Whether the availability status of agent is configured
                    to go offline automatically when away.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Agent not found
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/canned_responses:
    get:
      tags:
      - Canned Responses
      summary: List all Canned Responses in an Account
      description: Get Details of Canned Responses in an Account
      operationId: get-account-canned-response
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all canned responses
                items:
                  $ref: '#/components/schemas/canned_response'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Canned Responses
      summary: Add a New Canned Response
      description: Add a new Canned Response to Account
      operationId: add-new-canned-response-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/canned_response_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/canned_response'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/canned_responses/{id}:
    delete:
      tags:
      - Canned Responses
      summary: Remove a Canned Response from Account
      description: Remove a Canned Response from Account
      operationId: delete-canned-response-from-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the canned response to be deleted
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: Canned Response not found
          content: {}
      security:
      - userApiKey: []
    patch:
      tags:
      - Canned Response
      summary: Update Canned Response in Account
      description: Update a Canned Response in Account
      operationId: update-canned-response-in-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the canned response to be updated.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/canned_response_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/canned_response'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Agent not found
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/custom_attribute_definitions:
    get:
      tags:
      - Custom Attributes
      summary: List all custom attributes in an account
      description: Get details of custom attributes in an Account
      operationId: get-account-custom-attribute
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: attribute_model
        in: query
        description: conversation_attribute(0)/contact_attribute(1)
        required: true
        schema:
          type: string
          enum:
          - "0"
          - "1"
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all custom attributes
                items:
                  $ref: '#/components/schemas/custom_attribute'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Custom Attributes
      summary: Add a new custom attribute
      description: Add a new custom attribute to account
      operationId: add-new-custom-attribute-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/custom_attribute_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_attribute'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/custom_attribute_definitions/{id}:
    get:
      tags:
      - Custom Attributes
      summary: Get a custom attribute details
      description: Get the details of a custom attribute in the account
      operationId: get-details-of-a-single-custom-attribute
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the custom attribute to be updated.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_attribute'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given attribute ID does not exist in the account
          content: {}
    delete:
      tags:
      - Custom Attributes
      summary: Remove a custom attribute from account
      description: Remove a custom attribute from account
      operationId: delete-custom-attribute-from-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the custom attribute to be deleted
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: Custom attribute not found
          content: {}
      security:
      - userApiKey: []
    patch:
      tags:
      - Custom Attributes
      summary: Update custom attribute in Account
      description: Update a custom attribute in account
      operationId: update-custom-attribute-in-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the custom attribute to be updated.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/custom_attribute_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_attribute'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Agent not found
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/contacts:
    get:
      tags:
      - Contacts
      summary: List Contacts
      description: "Listing all the resolved contacts with pagination (Page size =\
        \ 15) . Resolved contacts are the ones with a value for identifier, email\
        \ or phone number"
      operationId: contactList
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: sort
        in: query
        description: The attribute by which list should be sorted
        schema:
          type: string
          enum:
          - name
          - email
          - phone_number
          - last_activity_at
          - -name
          - -email
          - -phone_number
          - -last_activity_at
      - name: page
        in: query
        description: The page parameter
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contact_list'
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
    post:
      tags:
      - Contacts
      summary: Create Contact
      description: Create a new Contact
      operationId: contactCreate
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/contact_create'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/extended_contact'
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/contacts/{id}:
    get:
      tags:
      - Contacts
      summary: Show Contact
      description: Get a contact belonging to the account using ID
      operationId: contactDetails
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/extended_contact'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Contact not found
          content: {}
    put:
      tags:
      - Contacts
      summary: Update Contact
      description: Update a contact belonging to the account using ID
      operationId: contactUpdate
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/contact_update'
        required: true
      responses:
        "204":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contact_base'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Contact not found
          content: {}
      x-codegen-request-body-name: data
    delete:
      tags:
      - Contacts
      summary: Delete Contact
      operationId: contactDelete
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Contact not found
          content: {}
  /api/v1/accounts/{account_id}/contacts/{id}/conversations:
    get:
      tags:
      - Contacts
      summary: Contact Conversations
      description: Get conversations associated to that contact
      operationId: contactConversations
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contact_conversations'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Contact not found
          content: {}
  /api/v1/accounts/{account_id}/contacts/search:
    get:
      tags:
      - Contacts
      summary: Search Contacts
      description: "Search the resolved contacts using a search key, currently supports\
        \ email search (Page size = 15). Resolved contacts are the ones with a value\
        \ for identifier, email or phone number"
      operationId: contactSearch
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: q
        in: query
        description: "Search using contact `name`, `identifier`, `email` or `phone\
          \ number`"
        schema:
          type: string
      - name: sort
        in: query
        description: The attribute by which list should be sorted
        schema:
          type: string
          enum:
          - name
          - email
          - phone_number
          - last_activity_at
          - -name
          - -email
          - -phone_number
          - -last_activity_at
      - name: page
        in: query
        description: The page parameter
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  payload:
                    $ref: '#/components/schemas/contact_list'
        "401":
          description: Authentication error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
  /api/v1/accounts/{account_id}/contacts/filter:
    post:
      tags:
      - Contacts
      summary: Contact Filter
      description: Filter contacts with custom filter options and pagination
      operationId: contactFilter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: page
        in: query
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                payload:
                  type: array
                  example:
                  - attribute_key: name
                    filter_operator: equal_to
                    values:
                    - en
                    query_operator: AND
                  - attribute_key: country_code
                    filter_operator: equal_to
                    values:
                    - us
                    query_operator: null
                  items:
                    type: object
                    properties:
                      attribute_key:
                        type: string
                        description: filter attribute name
                      filter_operator:
                        type: string
                        description: filter operator name
                        enum:
                        - equal_to
                        - not_equal_to
                        - contains
                        - does_not_contain
                        - is_present
                        - is_not_present
                        - is_greater_than
                        - is_less_than
                        - days_before
                      values:
                        type: array
                        description: array of the attribute values to filter
                        items:
                          type: string
                      query_operator:
                        type: string
                        description: query operator name
                        enum:
                        - AND
                        - OR
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contact_list'
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: body
  /api/v1/accounts/{account_id}/contacts/{id}/contact_inboxes:
    post:
      tags:
      - Contact
      summary: Create contact inbox
      description: Create a contact inbox record for an inbox
      operationId: contactInboxCreation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - inbox_id
              type: object
              properties:
                inbox_id:
                  type: number
                  description: The ID of the inbox
                source_id:
                  type: string
                  description: Contact Inbox Source Id
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contact_inboxes'
        "401":
          description: Authentication error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
        "422":
          description: Incorrect payload
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/contacts/{id}/contactable_inboxes:
    get:
      tags:
      - Contact
      summary: Get Contactable Inboxes
      description: Get List of contactable Inboxes
      operationId: contactableInboxesGet
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the contact
        required: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/contactable_inboxes'
        "401":
          description: Authentication error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
        "422":
          description: Incorrect payload
          content: {}
  /api/v1/accounts/{account_id}/automation_rules:
    get:
      tags:
      - Automation Rule
      summary: List all automation rules in an account
      description: Get details of automation rules in an Account
      operationId: get-account-automation-rule
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: The page parameter
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all automation rules
                items:
                  $ref: '#/components/schemas/automation_rule'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Automation Rule
      summary: Add a new automation rule
      description: Add a new automation rule to account
      operationId: add-new-automation-rule-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/automation_rule_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/automation_rule'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/automation_rules/{id}:
    get:
      tags:
      - Automation Rule
      summary: Get a automation rule details
      description: Get the details of a automation rule in the account
      operationId: get-details-of-a-single-automation-rule
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the automation rule to be updated.
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/automation_rule'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given rule ID does not exist in the account
          content: {}
    delete:
      tags:
      - Automation Rule
      summary: Remove a automation rule from account
      description: Remove a automation rule from account
      operationId: delete-automation-rule-from-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the automation rule to be deleted
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: automation rule not found
          content: {}
      security:
      - userApiKey: []
    patch:
      tags:
      - Automation Rule
      summary: Update automation rule in Account
      description: Update a automation rule in account
      operationId: update-automation-rule-in-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: The ID of the automation rule to be updated.
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/automation_rule_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/automation_rule'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Rule not found
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/portals:
    get:
      tags:
      - Help Center
      summary: List all portals in an account
      description: Get details of portals in an Account
      operationId: get-portal
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all portals
                items:
                  $ref: '#/components/schemas/portal'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Help Center
      summary: Add a new portal
      description: Add a new portal to account
      operationId: add-new-portal-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/portal_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/portal'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
    patch:
      tags:
      - Help Center
      summary: update a new portal
      description: update a new portal to account
      operationId: update-new-portal-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/portal_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/portal'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/portals/{portal_id}/categories:
    post:
      tags:
      - Help Center
      summary: Add a new category
      description: Add a new category to portal
      operationId: add-new-category-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: portal_id
        in: path
        description: The numeric ID of the portal
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/category_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/category'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/portals/{portal_id}/articles:
    post:
      tags:
      - Help Center
      summary: Add a new article
      description: Add a new article to portal
      operationId: add-new-article-to-account
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: portal_id
        in: path
        description: The numeric ID of the portal
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/article_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/article'
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/meta:
    get:
      tags:
      - Conversations
      summary: Get Conversation Counts
      description: "Get open, unassigned and all Conversation counts"
      operationId: conversationListMeta
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: status
        in: query
        description: Filter by conversation status.
        schema:
          type: string
          default: open
          enum:
          - open
          - resolved
          - pending
          - snoozed
      - name: q
        in: query
        description: Filters conversations with messages containing the search term
        schema:
          type: string
      - name: inbox_id
        in: query
        schema:
          type: integer
      - name: team_id
        in: query
        schema:
          type: integer
      - name: labels
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      mine_count:
                        type: number
                      unassigned_count:
                        type: number
                      assigned_count:
                        type: number
                      all_count:
                        type: number
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
  /api/v1/accounts/{account_id}/conversations:
    get:
      tags:
      - Conversations
      summary: Conversations List
      description: List all the conversations with pagination
      operationId: conversationList
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: assignee_type
        in: query
        description: Filter conversations by assignee type.
        schema:
          type: string
          default: all
          enum:
          - me
          - unassigned
          - all
          - assigned
      - name: status
        in: query
        description: Filter by conversation status.
        schema:
          type: string
          default: open
          enum:
          - open
          - resolved
          - pending
          - snoozed
      - name: q
        in: query
        description: Filters conversations with messages containing the search term
        schema:
          type: string
      - name: inbox_id
        in: query
        schema:
          type: integer
      - name: team_id
        in: query
        schema:
          type: integer
      - name: labels
        in: query
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        description: paginate through conversations
        schema:
          type: integer
          default: 1
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_list'
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
    post:
      tags:
      - Conversations
      summary: Create New Conversation
      description: "Creating a conversation in chatwoot requires a source id. \n\n\
        \ Learn more about source_id: https://github.com/chatwoot/chatwoot/wiki/Building-on-Top-of-Chatwoot:-Importing-Existing-Contacts-and-Creating-Conversations"
      operationId: newConversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - inbox_id
              - source_id
              type: object
              properties:
                source_id:
                  type: string
                  description: Conversation source id
                inbox_id:
                  type: string
                  description: "Id of inbox in which the conversation is created <br/>\
                    \ Allowed Inbox Types: Website, Phone, Api, Email"
                contact_id:
                  type: string
                  description: Contact Id for which conversation is created
                additional_attributes:
                  type: object
                  properties: {}
                  description: Lets you specify attributes like browser information
                custom_attributes:
                  type: object
                  properties: {}
                  description: "The object to save custom attributes for conversation,\
                    \ accepts custom attributes key and value"
                  example:
                    attribute_key: attribute_value
                    priority_conversation_number: 3
                status:
                  type: string
                  description: "Specify the conversation whether it's pending, open,\
                    \ closed"
                  enum:
                  - open
                  - resolved
                  - pending
                assignee_id:
                  type: string
                  description: Agent Id for assigning a conversation to an agent
                team_id:
                  type: string
                  description: Team Id for assigning a conversation to a team
                message:
                  required:
                  - content
                  type: object
                  properties:
                    content:
                      type: string
                      description: The content of the message
                    template_params:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the template
                          example: sample_issue_resolution
                        category:
                          type: string
                          description: Category of the template
                          example: UTILITY
                        language:
                          type: string
                          description: Language of the template
                          example: en_US
                        processed_params:
                          type: object
                          properties: {}
                          description: The processed param values for template variables
                            in template
                          example:
                            "1": Chatwoot
                      description: The template params for the message in case of
                        whatsapp Channel
                  description: The initial message to be sent to the conversation
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    description: ID of the conversation
                  account_id:
                    type: number
                    description: Account Id
                  inbox_id:
                    type: number
                    description: ID of the inbox
        "403":
          description: Access denied
          content: {}
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/filter:
    post:
      tags:
      - Conversations
      summary: Conversations Filter
      description: Filter conversations with custom filter options and pagination
      operationId: conversationFilter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: page
        in: query
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                payload:
                  type: array
                  example:
                  - attribute_key: browser_language
                    filter_operator: not_eq
                    values:
                    - en
                    query_operator: AND
                  - attribute_key: status
                    filter_operator: eq
                    values:
                    - pending
                    query_operator: null
                  items:
                    type: object
                    properties:
                      attribute_key:
                        type: string
                        description: filter attribute name

                      filter_operator:
                        type: string
                        description: filter operator name
                        enum:
                        - equal_to
                        - not_equal_to
                        - contains
                        - does_not_contain
                        - is_present
                        - is_not_present
                        - is_greater_than
                        - is_less_than
                        - days_before
                      values:
                        type: array
                        description: array of the attribute values to filter
                        items:
                          type: string
                      query_operator:
                        type: string
                        description: query operator name
                        enum:
                        - AND
                        - OR
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_filter_list'
        "400":
          description: Bad Request Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/bad_request_error'
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: body
  /api/v1/accounts/{account_id}/conversations/{conversation_id}:
    get:
      tags:
      - Conversations
      summary: Conversation Details
      description: Get all details regarding a conversation with all messages in the
        conversation
      operationId: get-details-of-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_show'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Conversation not found
          content: {}
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/toggle_status:
    post:
      tags:
      - Conversations
      summary: Toggle Status
      description: Toggles the status of the conversation between open and resolved
      operationId: toggle-status-of-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - status
              type: object
              properties:
                status:
                  type: string
                  description: The status of the conversation
                  enum:
                  - open
                  - resolved
                  - pending
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_status_toggle'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/toggle_priority:
    post:
      tags:
      - Conversations
      summary: Toggle Priority
      description: Toggles the priority of conversation
      operationId: toggle-priority-of-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - priority
              type: object
              properties:
                priority:
                  type: string
                  description: The priority of the conversation
                  enum:
                  - urgent
                  - high
                  - medium
                  - low
                  - none
        required: true
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/assignments:
    post:
      tags:
      - Conversation Assignment
      summary: Assign Conversation
      description: Assign a conversation to an agent or a team
      operationId: assign-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                assignee_id:
                  type: number
                  description: Id of the assignee user
                team_id:
                  type: number
                  description: "Id of the team. If the assignee_id is present, this\
                    \ param would be ignored"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/labels:
    get:
      tags:
      - Conversation Labels
      summary: List Labels
      description: Lists all the labels of a conversation
      operationId: list-all-labels-of-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_labels'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
    post:
      tags:
      - Conversation Labels
      summary: Add Labels
      description: Add labels to a conversation. Note that this API would overwrite
        the existing list of labels associated to the conversation.
      operationId: conversation-add-labels
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                labels:
                  type: array
                  description: Array of labels (comma-separated strings)
                  items:
                    type: string
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/conversation_labels'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/inboxes:
    get:
      tags:
      - Inboxes
      summary: List all inboxes
      description: List all inboxes available in the current account
      operationId: listAllInboxes
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of inboxes
                items:
                  $ref: '#/components/schemas/inbox'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
  /api/v1/accounts/{account_id}/inboxes/{id}/:
    get:
      tags:
      - Inboxes
      summary: Get an inbox
      description: Get an inbox available in the current account
      operationId: GetInbox
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the inbox
        required: true
        schema:
          type: number
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/inbox'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
  /api/v1/accounts/{account_id}/inboxes/:
    post:
      tags:
      - Inboxes
      summary: Create an inbox
      description: You can create more than one website inbox in each account
      operationId: inboxCreation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the inbox
                avatar:
                  type: string
                  description: File for avatar image
                  format: binary
                channel:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                      - web_widget
                    website_url:
                      type: string
                      description: URL at which the widget will be loaded
                    welcome_title:
                      type: string
                      description: Welcome title to be displayed on the widget
                    welcome_tagline:
                      type: string
                      description: Welcome tagline to be displayed on the widget
                    agent_away_message:
                      type: string
                      description: A message which will be sent if there is not agent
                        available. This is not available if agentbot is connected
                    widget_color:
                      type: string
                      description: A Hex-color string used to customize the widget
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/inbox'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/inboxes/{id}:
    patch:
      tags:
      - Inboxes
      summary: Update Inbox
      description: Add avatar and disable auto assignment for an inbox
      operationId: updateInbox
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the inbox
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - enable_auto_assignment
              type: object
              properties:
                name:
                  type: string
                  description: The name of the inbox
                enable_auto_assignment:
                  type: boolean
                  description: Enable Auto Assignment
                avatar:
                  type: string
                  description: Image file for avatar
                  format: binary
                channel:
                  type: object
                  properties:
                    website_url:
                      type: string
                      description: URL at which the widget will be loaded
                    welcome_title:
                      type: string
                      description: Welcome title to be displayed on the widget
                    welcome_tagline:
                      type: string
                      description: Welcome tagline to be displayed on the widget
                    agent_away_message:
                      type: string
                      description: A message which will be sent if there is not agent
                        available. This is not available if agentbot is connected
                    widget_color:
                      type: string
                      description: A Hex-color string used to customize the widget
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/inbox'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/inboxes/{id}/agent_bot:
    get:
      tags:
      - Inboxes
      summary: Show Inbox Agent Bot
      description: See if an agent bot is associated to the Inbox
      operationId: getInboxAgentBot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the inbox
        required: true
        schema:
          type: number
      responses:
        "204":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/agent_bot'
        "403":
          description: Access denied
          content: {}
        "404":
          description: "Inbox not found, Agent bot not found"
          content: {}
  /api/v1/accounts/{account_id}/inboxes/{id}/set_agent_bot:
    post:
      tags:
      - Inboxes
      summary: Add or remove agent bot
      description: "To add an agent bot pass agent_bot id, to remove agent bot from\
        \ an inbox pass null"
      operationId: updateAgentBot
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: id
        in: path
        description: ID of the inbox
        required: true
        schema:
          type: number
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - agent_bot
              type: object
              properties:
                agent_bot:
                  type: number
                  description: Agent bot ID
        required: true
      responses:
        "204":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: "Inbox not found, Agent bot not found"
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/inbox_members/{inbox_id}:
    get:
      tags:
      - Inboxes
      summary: List Agents in Inbox
      description: Get Details of Agents in an Inbox
      operationId: get-inbox-members
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: inbox_id
        in: path
        description: The ID of the Inbox
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all active agents
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
      security:
      - userApiKey: []
  /api/v1/accounts/{account_id}/inbox_members:
    post:
      tags:
      - Inboxes
      summary: Add a New Agent
      description: Add a new Agent to Inbox
      operationId: add-new-agent-to-inbox
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - inbox_id
              - user_ids
              type: object
              properties:
                inbox_id:
                  type: string
                  description: The ID of the inbox
                user_ids:
                  type: array
                  description: IDs of users to be added to the inbox
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all active agents
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
    delete:
      tags:
      - Inboxes
      summary: Remove an Agent from Inbox
      description: Remove an Agent from Inbox
      operationId: delete-agent-in-inbox
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - inbox_id
              - user_ids
              type: object
              properties:
                inbox_id:
                  type: string
                  description: The ID of the inbox
                user_ids:
                  type: array
                  description: IDs of users to be deleted from the inbox
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
    patch:
      tags:
      - Inboxes
      summary: Update Agents in Inbox
      description: All agents except the one passed in params will be removed
      operationId: update-agents-in-inbox
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - inbox_id
              - user_ids
              type: object
              properties:
                inbox_id:
                  type: string
                  description: The ID of the inbox
                user_ids:
                  type: array
                  description: IDs of users to be added to the inbox
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all active agents
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/messages:
    get:
      tags:
      - Messages
      summary: Get messages
      description: List all messages of a conversation
      operationId: list-all-messages
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of messages
                items:
                  type: object
                  allOf:
                  - $ref: '#/components/schemas/generic_id'
                  - $ref: '#/components/schemas/message'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Conversation not found
          content: {}
    post:
      tags:
      - Messages
      summary: Create New Message
      description: Create a new message in the conversation
      operationId: create-a-new-message-in-a-conversation
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/conversation_message_create'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                allOf:
                - $ref: '#/components/schemas/generic_id'
                - $ref: '#/components/schemas/message'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Conversation not found
          content: {}
      security:
      - userApiKey: []
      - agentBotApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/conversations/{conversation_id}/messages/{message_id}:
    delete:
      tags:
      - Messages
      summary: Delete a message
      description: Delete a message and it's attachments from the conversation.
      operationId: delete-a-message
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: conversation_id
        in: path
        description: The numeric ID of the conversation
        required: true
        schema:
          type: integer
      - name: message_id
        in: path
        description: The numeric ID of the message
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The message or conversation does not exist in the account
          content: {}
  /api/v1/accounts/{account_id}/integrations/apps:
    get:
      tags:
      - Integrations
      summary: List all the Integrations
      description: Get the details of all Integrations available for the account
      operationId: get-details-of-all-integrations
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of Integration apps
                items:
                  $ref: '#/components/schemas/integrations_app'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Url not found
          content: {}
  /api/v1/accounts/{account_id}/integrations/hooks:
    post:
      tags:
      - Integrations
      summary: Create an integration hook
      description: Create an integration hook
      operationId: create-an-integration-hook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/integrations_hook_create_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/integrations_hook'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/integrations/hooks/{hook_id}:
    delete:
      tags:
      - Integrations
      summary: Delete an Integration Hook
      description: Delete an Integration Hook
      operationId: delete-an-integration-hook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: hook_id
        in: path
        description: The numeric ID of the integration hook
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The hook does not exist in the account
          content: {}
    patch:
      tags:
      - Integrations
      summary: Update an Integration Hook
      description: Update an Integration Hook
      operationId: update-an-integrations-hook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: hook_id
        in: path
        description: The numeric ID of the integration hook
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/integrations_hook_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/integrations_hook'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/profile:
    get:
      tags:
      - Profile
      summary: Fetch user profile
      description: Get the user profile details
      operationId: fetchProfile
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/user'
        "401":
          description: Unauthorized
          content: {}
  /api/v1/accounts/{account_id}/teams:
    get:
      tags:
      - Teams
      summary: List all teams
      description: List all teams available in the current account
      operationId: list-all-teams
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of teams
                items:
                  $ref: '#/components/schemas/team'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Teams
      summary: Create a team
      description: Create a team in the account
      operationId: create-a-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/team_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/team'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/teams/{team_id}:
    get:
      tags:
      - Teams
      summary: Get a team details
      description: Get the details of a team in the account
      operationId: get-details-of-a-single-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/team'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given team ID does not exist in the account
          content: {}
    delete:
      tags:
      - Teams
      summary: Delete a team
      description: Delete a team from the account
      operationId: delete-a-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The team does not exist in the account
          content: {}
    patch:
      tags:
      - Teams
      summary: Update a team
      description: Update a team's attributes
      operationId: update-a-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/team_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/team'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/teams/{team_id}/team_members:
    get:
      tags:
      - Teams
      summary: List Agents in Team
      description: Get Details of Agents in an Team
      operationId: get-team-members
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all agents in the team
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Inbox not found
          content: {}
      security:
      - userApiKey: []
    post:
      tags:
      - Teams
      summary: Add a New Agent
      description: Add a new Agent to Team
      operationId: add-new-agent-to-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - user_ids
              type: object
              properties:
                user_ids:
                  type: array
                  description: IDs of users to be added to the team
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all active agents
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
    delete:
      tags:
      - Teams
      summary: Remove an Agent from Team
      description: Remove an Agent from Team
      operationId: delete-agent-in-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - user_ids
              type: object
              properties:
                user_ids:
                  type: array
                  description: IDs of users to be deleted from the team
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content: {}
        "403":
          description: Access denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
    patch:
      tags:
      - Teams
      summary: Update Agents in Team
      description: All agents except the one passed in params will be removed
      operationId: update-agents-in-team
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: team_id
        in: path
        description: The ID of the team to be updated
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              required:
              - user_ids
              type: object
              properties:
                user_ids:
                  type: array
                  description: IDs of users to be added to the team
                  items:
                    type: integer
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of all agents in the team
                items:
                  $ref: '#/components/schemas/agent'
        "403":
          description: Access denied
          content: {}
        "404":
          description: Team not found
          content: {}
        "422":
          description: User must exist
          content: {}
      security:
      - userApiKey: []
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/custom_filters:
    get:
      tags:
      - Custom Filters
      summary: List all custom filters
      description: List all custom filters in a category of a user
      operationId: list-all-filters
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: filter_type
        in: query
        description: The type of custom filter
        schema:
          type: string
          enum:
          - conversation
          - contact
          - report
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of custom filters
                items:
                  $ref: '#/components/schemas/custom_filter'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Custom Filters
      summary: Create a custom filter
      description: Create a custom filter in the account
      operationId: create-a-custom-filter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: filter_type
        in: query
        description: The type of custom filter
        schema:
          type: string
          enum:
          - conversation
          - contact
          - report
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/custom_filter_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_filter'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/custom_filters/{custom_filter_id}:
    get:
      tags:
      - Custom Filters
      summary: Get a custom filter details
      description: Get the details of a custom filter in the account
      operationId: get-details-of-a-single-custom-filter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: custom_filter_id
        in: path
        description: The numeric ID of the custom filter
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_filter'
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The given team ID does not exist in the account
          content: {}
    delete:
      tags:
      - Custom Filters
      summary: Delete a custom filter
      description: Delete a custom filter from the account
      operationId: delete-a-custom-filter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: custom_filter_id
        in: path
        description: The numeric ID of the custom filter
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The custom filter does not exist in the account
          content: {}
    patch:
      tags:
      - Custom Filters
      summary: Update a custom filter
      description: Update a custom filter's attributes
      operationId: update-a-custom-filter
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: custom_filter_id
        in: path
        description: The numeric ID of the custom filter
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/custom_filter_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/custom_filter'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/webhooks:
    get:
      tags:
      - Webhooks
      summary: List all webhooks
      description: List all webhooks in the account
      operationId: list-all-webhooks
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of webhook objects
                items:
                  $ref: '#/components/schemas/webhook'
        "401":
          description: Unauthorized
          content: {}
    post:
      tags:
      - Webhooks
      summary: Add a webhook
      description: Add a webhook subscription to the account
      operationId: create-a-webhook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/webhook_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/webhook'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v1/accounts/{account_id}/webhooks/{webhook_id}:
    delete:
      tags:
      - Webhooks
      summary: Delete a webhook
      description: Delete a webhook from the account
      operationId: delete-a-webhook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: webhook_id
        in: path
        description: The numeric ID of the webhook
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Success
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: The webhook does not exist in the account
          content: {}
    patch:
      tags:
      - Webhooks
      summary: Update a webhook object
      description: Update a webhook object in the account
      operationId: update-a-webhook
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: webhook_id
        in: path
        description: The numeric ID of the webhook
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/webhook_create_update_payload'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/webhook'
        "401":
          description: Unauthorized
          content: {}
      x-codegen-request-body-name: data
  /api/v2/accounts/{account_id}/reports:
    get:
      tags:
      - Reports
      summary: Get Account reports
      description: "Get Account reports for a specific type, metric and date range"
      operationId: list-all-conversation-statistics
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: metric
        in: query
        description: The type of metric
        required: true
        schema:
          type: string
          enum:
          - conversations_count
          - incoming_messages_count
          - outgoing_messages_count
          - avg_first_response_time
          - avg_resolution_time
          - resolutions_count
      - name: type
        in: query
        description: Type of report
        required: true
        schema:
          type: string
          enum:
          - account
          - agent
          - inbox
          - label
          - team
      - name: id
        in: query
        description: The Id of specific object in case of agent/inbox/label
        schema:
          type: string
      - name: since
        in: query
        description: The timestamp from where report should start.
        schema:
          type: string
      - name: until
        in: query
        description: The timestamp from where report should stop.
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of date based conversation statistics
                items:
                  type: object
                  properties:
                    value:
                      type: string
                    timestamp:
                      type: number
        "403":
          description: Access denied
          content: {}
        "404":
          description: reports not found
          content: {}
  /api/v2/accounts/{account_id}/reports/summary:
    get:
      tags:
      - Reports
      summary: Get Account reports summary
      description: Get Account reports summary for a specific type and date range
      operationId: list-all-conversation-statistics-summary
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: type
        in: query
        description: Type of report
        required: true
        schema:
          type: string
          enum:
          - account
          - agent
          - inbox
          - label
          - team
      - name: id
        in: query
        description: The Id of specific object in case of agent/inbox/label
        schema:
          type: string
      - name: since
        in: query
        description: The timestamp from where report should start.
        schema:
          type: string
      - name: until
        in: query
        description: The timestamp from where report should stop.
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/account_summary'
        "403":
          description: Access denied
          content: {}
        "404":
          description: reports not found
          content: {}
  /api/v2/accounts/{account_id}/reports/conversations:
    get:
      tags:
      - Reports
      summary: Account Conversation Metrics
      description: Get conversation metrics for Account
      operationId: get-account-conversation-metrics
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: type
        in: query
        description: Type of report
        required: true
        schema:
          type: string
          enum:
          - account
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  open:
                    type: number
                  unattended:
                    type: number
                  unassigned:
                    type: number
                description: Object of account conversation metrics
        "403":
          description: Access denied
          content: {}
        "404":
          description: reports not found
          content: {}
  /api/v2/accounts/{account_id}/reports/conversations/:
    get:
      tags:
      - Reports
      summary: Agent Conversation Metrics
      description: Get conversation metrics for Agent
      operationId: get-agent-conversation-metrics
      parameters:
      - name: account_id
        in: path
        description: The numeric ID of the account
        required: true
        schema:
          type: integer
      - name: type
        in: query
        description: Type of report
        required: true
        schema:
          type: string
          enum:
          - agent
      - name: user_id
        in: query
        description: The numeric ID of the user
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                description: Array of agent based conversation metrics
                items:
                  $ref: '#/components/schemas/agent_conversation_metrics'
        "403":
          description: Access denied
          content: {}
        "404":
          description: reports not found
          content: {}
components:
  schemas:
    bad_request_error:
      title: data
      type: object
      properties:
        description:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/request_error'
    request_error:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
        code:
          type: string
    generic_id:
      type: object
      properties:
        id:
          type: number
    canned_response:
      type: object
      properties:
        id:
          type: integer
          description: ID of the canned response
        content:
          type: string
          description: Message content for canned response
        short_code:
          type: string
          description: Short Code for quick access of the canned response
        account_id:
          type: integer
          description: Account Id
    custom_attribute:
      type: object
      properties:
        id:
          type: integer
          description: Identifier
        attribute_display_name:
          type: string
          description: Attribute display name
        attribute_display_type:
          type: string
          description: "Attribute display type (text, number, currency, percent, link,\
            \ date, list, checkbox)"
        attribute_description:
          type: string
          description: Attribute description
        attribute_key:
          type: string
          description: Attribute unique key value
        attribute_values:
          type: string
          description: Attribute values
        default_value:
          type: string
          description: Attribute default value
        attribute_model:
          type: string
          description: Attribute type(conversation_attribute/contact_attribute)
        account_id:
          type: integer
          description: Account Id
    automation_rule:
      type: object
      properties:
        event_name:
          type: string
          description: "Automation Rule event, on which we call the actions(conversation_created,\
            \ conversation_updated, message_created)"
          example: message_created
          enum:
          - conversation_created
          - conversation_updated
          - message_created
        name:
          type: string
          description: The name of the rule
          example: Add label on message create event
        description:
          type: string
          description: Description to give more context about the rule
          example: Add label support and sales on message create event if incoming
            message content contains text help
        active:
          type: boolean
          description: Enable/disable automation rule
        actions:
          type: array
          description: Array of actions which we perform when condition matches
          items:
            type: object
            properties: {}
            example:
              action_name: add_label
              action_params:
              - support
              - sales
        conditions:
          type: array
          description: Array of conditions on which conversation/message filter would
            work
          items:
            type: object
            properties: {}
            example:
              attribute_key: content
              filter_operator: contains
              values:
              - help
              query_operator: nil
        account_id:
          type: integer
          description: Account Id
    portal:
      type: object
      properties:
        id:
          type: integer
        archived:
          type: boolean
        color:
          type: string
        config:
          type: object
          properties: {}
          description: "Save information about locales, allowed_locales and default\
            \ portal/help-center locale"
        custom_domain:
          type: string
        header_text:
          type: string
          description: The text content.
        homepage_link:
          type: string
        name:
          type: string
        slug:
          type: string
        page_title:
          type: string
        account_id:
          type: integer
        categories:
          type: array
          items:
            $ref: '#/components/schemas/category'
        articles:
          type: array
          items:
            $ref: '#/components/schemas/article'
    category:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
          description: The text content.
        locale:
          type: string
        name:
          type: string
        slug:
          type: string
        position:
          type: integer
        portal_id:
          type: integer
        account_id:
          type: integer
        associated_category_id:
          type: integer
          description: "To associate similar categories to each other, e.g same category\
            \ of product documentation in different languages"
        parent_category_id:
          type: integer
          description: "To define parent category, e.g product documentation has multiple\
            \ level features in sales category or in engineering category."
    article:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
          description: The text content.
        meta:
          type: object
          properties: {}
        position:
          type: integer
        status:
          type: integer
        title:
          type: string
        slug:
          type: string
        views:
          type: integer
        portal_id:
          type: integer
        account_id:
          type: integer
        author_id:
          type: integer
        category_id:
          type: integer
        folder_id:
          type: integer
        associated_article_id:
          type: integer
          description: "To associate similar articles to each other, e.g to provide\
            \ the link for the reference."
    contact:
      type: object
      properties:
        payload:
          type: object
          properties:
            contact:
              type: object
              properties:
                email:
                  type: string
                  description: Email address of the contact
                name:
                  type: string
                  description: The name of the contact
                phone_number:
                  type: string
                  description: Phone number of the contact
                thumbnail:
                  type: string
                  description: Avatar URL of the contact
                additional_attributes:
                  type: object
                  properties: {}
                  description: The object containing additional attributes related
                    to the contact
                custom_attributes:
                  type: object
                  properties: {}
                  description: "The object to save custom attributes for contact,\
                    \ accepts custom attributes key and value"
                  example:
                    attribute_key: attribute_value
                    signed_up_at: dd/mm/yyyy
                contact_inboxes:
                  type: array
                  items:
                    $ref: '#/components/schemas/contact_inboxes'
    conversation:
      type: object
      properties:
        id:
          type: number
          description: ID of the conversation
        messages:
          type: array
          items:
            $ref: '#/components/schemas/message'
        account_id:
          type: number
          description: Account Id
        inbox_id:
          type: number
          description: ID of the inbox
        status:
          type: string
          description: The status of the conversation
          enum:
          - open
          - resolved
          - pending
        timestamp:
          type: string
          description: The time at which conversation was created
        contact_last_seen_at:
          type: string
        agent_last_seen_at:
          type: string
        unread_count:
          type: number
          description: The number of unread messages
        additional_attributes:
          type: object
          properties: {}
          description: The object containing additional attributes related to the
            conversation
        custom_attributes:
          type: object
          properties: {}
          description: "The object to save custom attributes for conversation, accepts\
            \ custom attributes key and value"
          example:
            attribute_key: attribute_value
            priority_conversation_number: 3
    message:
      type: object
      properties:
        content:
          type: string
          description: The text content of the message
        content_type:
          type: string
          description: The type of the template message
          enum:
          - text
          - input_select
          - cards
          - form
        content_attributes:
          type: object
          properties: {}
          description: The content attributes for each content_type
        message_type:
          type: integer
          description: The type of the message
          enum:
            - 0
            - 1
            - 2
            - 3
          x-enum-mapping:
            0: incoming
            1: outgoing
            2: activity
            3: template
        created_at:
          type: integer
          description: The time at which message was created
        private:
          type: boolean
          description: The flags which shows whether the message is private or not
        attachment:
          type: object
          properties: {}
          description: The file object attached to the image
        sender:
          type: object
          properties: {}
          description: User/Agent/AgentBot object
        conversation_id:
          type: number
          description: ID of the conversation
    user:
      type: object
      properties:
        id:
          type: number
        uid:
          type: string
        name:
          type: string
        available_name:
          type: string
        display_name:
          type: string
        email:
          type: string
        account_id:
          type: number
        role:
          type: string
          enum:
          - agent
          - administrator
        confirmed:
          type: boolean
        custom_attributes:
          type: object
          properties: {}
          description: Available for users who are created through platform APIs and
            has custom attributes associated.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/account'
    agent:
      type: object
      properties:
        id:
          type: integer
        uid:
          type: string
        name:
          type: string
        available_name:
          type: string
        display_name:
          type: string
        email:
          type: string
        account_id:
          type: integer
        role:
          type: string
          enum:
          - agent
          - administrator
        confirmed:
          type: boolean
        availability_status:
          type: string
          description: The availability status of the agent computed by Chatwoot.
          enum:
          - available
          - busy
          - offline
        auto_offline:
          type: boolean
          description: Whether the availability status of agent is configured to go
            offline automatically when away.
        custom_attributes:
          type: object
          properties: {}
          description: Available for users who are created through platform APIs and
            has custom attributes associated.
    inbox:
      type: object
      properties:
        id:
          type: number
          description: ID of the inbox
        name:
          type: string
          description: The name of the inbox
        website_url:
          type: string
          description: Website URL
        channel_type:
          type: string
          description: The type of the inbox
        avatar_url:
          type: string
          description: The avatar image of the inbox
        widget_color:
          type: string
          description: Widget Color used for customization of the widget
        website_token:
          type: string
          description: Website Token
        enable_auto_assignment:
          type: boolean
          description: The flag which shows whether Auto Assignment is enabled or
            not
        web_widget_script:
          type: string
          description: Script used to load the website widget
        welcome_title:
          type: string
          description: Welcome title to be displayed on the widget
        welcome_tagline:
          type: string
          description: Welcome tagline to be displayed on the widget
        greeting_enabled:
          type: boolean
          description: The flag which shows whether greeting is enabled
        greeting_message:
          type: string
          description: A greeting message when the user starts the conversation
    agent_bot:
      type: object
      properties:
        id:
          type: number
          description: ID of the agent bot
        name:
          type: string
          description: The name of the agent bot
        description:
          type: string
          description: The description about the agent bot
        account_id:
          type: number
          description: Account ID if it's an account specific bot
        outgoing_url:
          type: string
          description: The webhook URL for the bot
    contact_inboxes:
      type: object
      properties:
        source_id:
          type: string
          description: Contact Inbox Source Id
        inbox:
          $ref: '#/components/schemas/inbox'
    contactable_inboxes:
      type: object
      properties:
        source_id:
          type: string
          description: Contact Inbox Source Id
        inbox:
          $ref: '#/components/schemas/inbox'
    custom_filter:
      type: object
      properties:
        id:
          type: number
          description: The ID of the custom filter
        name:
          type: string
          description: The name of the custom filter
        type:
          type: string
          description: The description about the custom filter
          enum:
          - conversation
          - contact
          - report
        query:
          type: object
          properties: {}
          description: A query that needs to be saved as a custom filter
        created_at:
          type: string
          description: The time at which the custom filter was created
          format: date-time
        updated_at:
          type: string
          description: The time at which the custom filter was updated
          format: date-time
    webhook:
      type: object
      properties:
        id:
          type: number
          description: The ID of the webhook
        url:
          type: string
          description: The url to which the events will be send
        subscriptions:
          type: array
          description: The list of subscribed events
          items:
            type: string
            enum:
            - conversation_created
            - conversation_status_changed
            - conversation_updated
            - contact_created
            - contact_updated
            - message_created
            - message_updated
            - webwidget_triggered
        account_id:
          type: number
          description: The id of the account which the webhook object belongs to
    account:
      type: object
      properties:
        id:
          type: number
          description: Account ID
        name:
          type: string
          description: Name of the account
        role:
          type: string
          description: The user role in the account
          enum:
          - administrator
          - agent
    platform_account:
      type: object
      properties:
        id:
          type: number
          description: Account ID
        name:
          type: string
          description: Name of the account
    team:
      type: object
      properties:
        id:
          type: number
          description: The ID of the team
        name:
          type: string
          description: The name of the team
        description:
          type: string
          description: The description about the team
        allow_auto_assign:
          type: boolean
          description: "If this setting is turned on, the system would automatically\
            \ assign the conversation to an agent in the team while assigning the\
            \ conversation to a team"
        account_id:
          type: number
          description: The ID of the account with the team is a part of
        is_member:
          type: boolean
          description: This field shows whether the current user is a part of the
            team
    integrations_app:
      type: object
      properties:
        id:
          type: string
          description: The ID of the integration
        name:
          type: string
          description: The name of the integration
        description:
          type: string
          description: The description about the team
        hook_type:
          type: string
          description: Whether the integration is an account or inbox integration
        enabled:
          type: boolean
          description: Whether the integration is enabled for the account
        allow_multiple_hooks:
          type: boolean
          description: Whether multiple hooks can be created for the integration
        hooks:
          type: array
          description: If there are any hooks created for this integration
          items:
            type: object
            properties: {}
    integrations_hook:
      type: object
      properties:
        id:
          type: string
          description: The ID of the integration hook
        app_id:
          type: string
          description: The ID of the integration app
        inbox_id:
          type: string
          description: Inbox ID if its an Inbox integration
        account_id:
          type: string
          description: Account ID of the integration
        status:
          type: boolean
          description: Whether the integration hook is enabled for the account
        hook_type:
          type: boolean
          description: Whether its an account or inbox integration hook
        settings:
          type: object
          properties: {}
          description: The associated settings for the integration
    public_contact:
      type: object
      properties:
        id:
          type: integer
          description: Id of the contact
        source_id:
          type: string
          description: The session identifier of the contact
        name:
          type: string
          description: Name of the contact
        email:
          type: string
          description: Email of the contact
        pubsub_token:
          type: string
          description: The token to be used to connect to chatwoot websocket
    public_conversation:
      type: object
      properties:
        id:
          type: integer
          description: Id of the conversation
        inbox_id:
          type: string
          description: The inbox id of the conversation
        messages:
          type: array
          description: Messages in the conversation
          items:
            $ref: '#/components/schemas/message'
        contact:
          type: object
          properties: {}
          description: The contact information associated to the conversation
    public_message:
      type: object
      properties:
        id:
          type: string
          description: Id of the message
        content:
          type: string
          description: Text content of the message
        message_type:
          type: string
          description: Denotes the message type
        content_type:
          type: string
          description: Content type of the message
        content_attributes:
          type: string
          description: Additional content attributes of the message
        created_at:
          type: string
          description: Created at time stamp of the message
        conversation_id:
          type: string
          description: Conversation Id of the message
        attachments:
          type: array
          description: Attachments if any
          items:
            type: object
            properties: {}
        sender:
          type: object
          properties: {}
          description: Details of the sender
    public_inbox:
      type: object
      properties:
        identifier:
          type: string
          description: Inbox identifier
        name:
          type: string
          description: Name of the inbox
        timezone:
          type: string
          description: The timezone defined on the inbox
        working_hours:
          type: array
          description: The working hours defined on the inbox
          items:
            type: object
            properties:
              day_of_week:
                type: integer
                description: "Day of the week as a number. Sunday -> 0, Saturday ->\
                  \ 6"
              open_all_day:
                type: boolean
                description: Whether or not the business is open the whole day
              closed_all_day:
                type: boolean
                description: Whether or not the business is closed the whole day
              open_hour:
                type: integer
                description: Opening hour. Can be null if closed all day
              open_minutes:
                type: integer
                description: Opening minute. Can be null if closed all day
              close_hour:
                type: integer
                description: Closing hour. Can be null if closed all day
              close_minutes:
                type: integer
                description: Closing minute. Can be null if closed all day
        working_hours_enabled:
          type: boolean
          description: Whether of not the working hours are enabled on the inbox
        csat_survey_enabled:
          type: boolean
          description: Whether of not the Customer Satisfaction survey is enabled
            on the inbox
        greeting_enabled:
          type: boolean
          description: Whether of not the Greeting Message is enabled on the inbox
        identity_validation_enabled:
          type: boolean
          description: Whether of not the User Identity Validation is enforced on
            the inbox
    account_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: Name of the account
    agent_bot_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: The name of the agent bot
        description:
          type: string
          description: The description about the agent bot
        outgoing_url:
          type: string
          description: The webhook URL for the bot
    user_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: Name of the user
        email:
          type: string
          description: Email of the user
        password:
          type: string
          description: "Password must contain uppercase, lowercase letters, number\
            \ and a special character"
        custom_attributes:
          type: object
          properties: {}
          description: Custom attributes you want to associate with the user
    canned_response_create_update_payload:
      type: object
      properties:
        content:
          type: string
          description: Message content for canned response
        short_code:
          type: string
          description: Short Code for quick access of the canned response
    custom_attribute_create_update_payload:
      type: object
      properties:
        attribute_display_name:
          type: string
          description: Attribute display name
        attribute_display_type:
          type: integer
          description: "Attribute display type (text- 0, number- 1, currency- 2, percent-\
            \ 3, link- 4, date- 5, list- 6, checkbox- 7)"
        attribute_description:
          type: string
          description: Attribute description
        attribute_key:
          type: string
          description: Attribute unique key value
        attribute_values:
          type: array
          description: Attribute values
          items:
            type: string
        attribute_model:
          type: integer
          description: "Attribute type(conversation_attribute- 0, contact_attribute-\
            \ 1)"
    contact_create:
      required:
      - inbox_id
      type: object
      properties:
        inbox_id:
          type: number
        name:
          type: string
          description: name of the contact
        email:
          type: string
          description: email of the contact
        phone_number:
          type: string
          description: phone number of the contact
        avatar:
          type: string
          description: Send the form data with the avatar image binary or use the
            avatar_url
          format: binary
        avatar_url:
          type: string
          description: "The url to a jpeg, png file for the contact avatar"
        identifier:
          type: string
          description: A unique identifier for the contact in external system
        custom_attributes:
          type: object
          properties: {}
          description: "An object where you can store custom attributes for contact.\
            \ example {\"type\":\"customer\", \"age\":30}"
    contact_update:
      type: object
      properties:
        name:
          type: string
          description: name of the contact
        email:
          type: string
          description: email of the contact
        phone_number:
          type: string
          description: phone number of the contact
        avatar:
          type: string
          description: Send the form data with the avatar image binary or use the
            avatar_url
          format: binary
        avatar_url:
          type: string
          description: "The url to a jpeg, png file for the contact avatar"
        identifier:
          type: string
          description: A unique identifier for the contact in external system
        custom_attributes:
          type: object
          properties: {}
          description: "An object where you can store custom attributes for contact.\
            \ example {\"type\":\"customer\", \"age\":30}"
    conversation_message_create:
      required:
      - content
      type: object
      properties:
        content:
          type: string
          description: The content of the message
        message_type:
          type: string
          enum:
          - outgoing
          - incoming
        private:
          type: boolean
          description: Flag to identify if it is a private note
        content_type:
          type: string
          description: if you want to create custom message types
          example: cards
          enum:
          - input_email
          - cards
          - input_select
          - form
          - article
        content_attributes:
          type: object
          properties: {}
          description: attributes based on your content type
        template_params:
          type: object
          properties:
            name:
              type: string
              description: Name of the template
              example: sample_issue_resolution
            category:
              type: string
              description: Category of the template
              example: UTILITY
            language:
              type: string
              description: Language of the template
              example: en_US
            processed_params:
              type: object
              properties: {}
              description: The processed param values for template variables in template
              example:
                "1": Chatwoot
          description: The template params for the message in case of whatsapp Channel
    team_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: The name of the team
        description:
          type: string
          description: The description of the team
        allow_auto_assign:
          type: boolean
          description: "If this setting is turned on, the system would automatically\
            \ assign the conversation to an agent in the team while assigning the\
            \ conversation to a team"
    custom_filter_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom filter
        type:
          type: string
          description: The description about the custom filter
          enum:
          - conversation
          - contact
          - report
        query:
          type: object
          properties: {}
          description: A query that needs to be saved as a custom filter
    webhook_create_update_payload:
      type: object
      properties:
        url:
          type: string
          description: The url where the events should be sent
        subscriptions:
          type: array
          description: The events you want to subscribe to.
          items:
            type: string
            enum:
            - conversation_created
            - conversation_status_changed
            - conversation_updated
            - message_created
            - message_updated
            - webwidget_triggered
    integrations_hook_create_payload:
      type: object
      properties:
        app_id:
          type: string
          description: The ID of app for which integration hook is being created
        inbox_id:
          type: string
          description: "The inbox ID, if the hook is an inbox hook"
        settings:
          type: object
          properties: {}
          description: The settings required by the integration
    integrations_hook_update_payload:
      type: object
      properties:
        settings:
          type: object
          properties: {}
          description: The settings required by the integration
    automation_rule_create_update_payload:
      type: object
      properties:
        name:
          type: string
          description: Rule name
          example: Add label on message create event
        description:
          type: string
          description: The description about the automation and actions
          example: Add label support and sales on message create event if incoming
            message content contains text help
        event_name:
          type: string
          description: The event when you want to execute the automation actions
          example: message_created
          enum:
          - conversation_created
          - conversation_updated
          - message_created
        active:
          type: boolean
          description: Enable/disable automation rule
        actions:
          type: array
          description: "Array of actions which you want to perform when condition\
            \ matches, e.g add label support if message contains content help."
          items:
            type: object
            properties: {}
            example:
              action_name: add_label
              action_params:
              - support
        conditions:
          type: array
          description: "Array of conditions on which conversation filter would work,\
            \ e.g message content contains text help."
          items:
            type: object
            properties: {}
            example:
              attribute_key: content
              filter_operator: contains
              query_operator: nil
              values:
              - help
    portal_create_update_payload:
      type: object
      properties:
        archived:
          type: boolean
          description: Status to check if portal is live
        color:
          type: string
          description: Header color for help-center
          example: "add color HEX string, \"#fffff\""
        config:
          type: object
          properties: {}
          description: Configuration about supporting locales
          example:
            allowed_locales:
            - en
            - es
            default_locale: en
        custom_domain:
          type: string
          description: Custom domain to  display help center.
          example: https://chatwoot.help/.
        header_text:
          type: string
          description: Help center header
          example: Handbook
        homepage_link:
          type: string
          description: link to main dashboard
          example: https://www.chatwoot.com/
        name:
          type: string
          description: Name for the portal
        slug:
          type: string
          description: Slug for the portal to display in link
        page_title:
          type: string
          description: Page title for the portal
        account_id:
          type: integer
    category_create_update_payload:
      type: object
      properties:
        description:
          type: string
          description: Category description
        locale:
          type: string
          description: Category locale
          example: en/es
        name:
          type: string
          description: Category name
        slug:
          type: string
          description: Category slug
        position:
          type: integer
          description: Category position in the portal list to sort
        portal_id:
          type: integer
        account_id:
          type: integer
        associated_category_id:
          type: integer
          description: "To associate similar categories to each other, e.g same category\
            \ of product documentation in different languages"
        parent_category_id:
          type: integer
          description: "To define parent category, e.g product documentation has multiple\
            \ level features in sales category or in engineering category."
    article_create_update_payload:
      type: object
      properties:
        content:
          type: string
          description: The text content.
        meta:
          type: object
          properties: {}
          description: Use for search
          example:
            tags:
            - article_name
            title: article title
            description: article description
        position:
          type: integer
          description: article position in category
        status:
          type: integer
        title:
          type: string
        slug:
          type: string
        views:
          type: integer
        portal_id:
          type: integer
        account_id:
          type: integer
        author_id:
          type: integer
        category_id:
          type: integer
        folder_id:
          type: integer
        associated_article_id:
          type: integer
          description: "To associate similar articles to each other, e.g to provide\
            \ the link for the reference."
    public_contact_create_update_payload:
      type: object
      properties:
        identifier:
          type: string
          description: External identifier of the contact
        identifier_hash:
          type: string
          description: Identifier hash prepared for HMAC authentication
        email:
          type: string
          description: Email of the contact
        name:
          type: string
          description: Name of the contact
        phone_number:
          type: string
          description: Phone number of the contact
        avatar_url:
          type: string
          description: "The url to a jpeg, png file for the user avatar"
        custom_attributes:
          type: object
          properties: {}
          description: Custom attributes of the customer
    public_message_create_payload:
      type: object
      properties:
        content:
          type: string
          description: Content for the message
        echo_id:
          type: string
          description: Temporary identifier which will be passed back via websockets
    public_message_update_payload:
      type: object
      properties:
        submitted_values:
          type: object
    public_conversation_create_payload:
      type: object
      properties:
        custom_attributes:
          type: object
          properties: {}
          description: Custom attributes of the conversation
    extended_contact:
      allOf:
      - $ref: '#/components/schemas/contact'
      - type: object
        properties:
          id:
            type: number
            description: Id of the user
          availability_status:
            type: string
            description: Availability status of the user
            enum:
            - online
            - offline
    contact_base:
      allOf:
      - $ref: '#/components/schemas/generic_id'
      - $ref: '#/components/schemas/contact'
    contact_list:
      type: array
      description: array of contacts
      items:
        type: object
        allOf:
        - $ref: '#/definitions/generic_id'
        - $ref: '#/definitions/contact'
    contact_conversations:
      type: array
      description: array of conversations
      items:
        type: object
        allOf:
        - $ref: '#/definitions/conversation'
        - type: object
          properties:
            meta:
              type: object
              properties:
                sender:
                  type: object
                  properties:
                    id:
                      type: number
                      description: ID fo the sender
                    name:
                      type: string
                      description: The name of the sender
                    thumbnail:
                      type: string
                      description: Avatar URL of the contact
                    channel:
                      type: string
                      description: Channel Type
                assignee:
                  $ref: '#/definitions/user'
        - type: object
          properties:
            display_id:
              type: number
    conversation_list:
      type: object
      properties:
        data:
          type: object
          properties:
            meta:
              type: object
              properties:
                mine_count:
                  type: number
                unassigned_count:
                  type: number
                assigned_count:
                  type: number
                all_count:
                  type: number
            payload:
              type: array
              description: array of conversations
              items:
                type: object
                allOf:
                - $ref: '#/components/schemas/generic_id'
                - $ref: '#/components/schemas/conversation'
                - type: object
                  properties:
                    meta:
                      type: object
                      properties:
                        sender:
                          type: object
                          properties:
                            id:
                              type: number
                              description: ID fo the sender
                            name:
                              type: string
                              description: The name of the sender
                            thumbnail:
                              type: string
                              description: Avatar URL of the contact
                            channel:
                              type: string
                              description: Channel Type
                        assignee:
                          $ref: '#/definitions/user'
    conversation_filter_list:
      type: object
      properties:
        meta:
          type: object
          properties:
            mine_count:
              type: number
            unassigned_count:
              type: number
            assigned_count:
              type: number
            all_count:
              type: number
        payload:
          type: array
          description: array of conversations
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/generic_id'
              - $ref: '#/components/schemas/conversation'
              - type: object
                properties:
                  meta:
                    type: object
                    properties:
                      sender:
                        type: object
                        properties:
                          id:
                            type: number
                            description: ID fo the sender
                          name:
                            type: string
                            description: The name of the sender
                          thumbnail:
                            type: string
                            description: Avatar URL of the contact
                          channel:
                            type: string
                            description: Channel Type
                      assignee:
                        $ref: '#/definitions/user'
    conversation_show:
      allOf:
      - $ref: '#/components/schemas/conversation'
      - type: object
        properties:
          meta:
            type: object
            properties:
              sender:
                type: object
                properties:
                  id:
                    type: number
                    description: ID fo the sender
                  name:
                    type: string
                    description: The name of the sender
                  thumbnail:
                    type: string
                    description: Avatar URL of the contact
                  channel:
                    type: string
                    description: Channel Type
              assignee:
                $ref: '#/components/schemas/user'
    conversation_status_toggle:
      type: object
      properties:
        meta:
          type: object
          properties: {}
        payload:
          type: object
          properties:
            success:
              type: boolean
            current_status:
              type: string
              enum:
              - open
              - resolved
            conversation_id:
              type: number
    conversation_labels:
      type: object
      properties:
        payload:
          type: array
          description: Array of labels
          items:
            type: string
    account_summary:
      type: object
      properties:
        avg_first_response_time:
          type: string
        avg_resolution_time:
          type: string
        conversations_count:
          type: number
        incoming_messages_count:
          type: number
        outgoing_messages_count:
          type: number
        resolutions_count:
          type: number
        previous:
          type: object
          properties:
            avg_first_response_time:
              type: string
            avg_resolution_time:
              type: string
            conversations_count:
              type: number
            incoming_messages_count:
              type: number
            outgoing_messages_count:
              type: number
            resolutions_count:
              type: number
    agent_conversation_metrics:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        thumbnail:
          type: string
        availability:
          type: string
        metric:
          type: object
          properties:
            open:
              type: number
            unattended:
              type: number
  parameters:
    account_id:
      name: account_id
      in: path
      description: The numeric ID of the account
      required: true
      schema:
        type: integer
    portal_id:
      name: portal_id
      in: path
      description: The numeric ID of the portal
      required: true
      schema:
        type: integer
    agent_bot_id:
      name: id
      in: path
      description: The ID of the agentbot to be updated
      required: true
      schema:
        type: integer
    team_id:
      name: team_id
      in: path
      description: The ID of the team to be updated
      required: true
      schema:
        type: integer
    inbox_id:
      name: inbox_id
      in: path
      description: The ID of the Inbox
      required: true
      schema:
        type: integer
    hook_id:
      name: hook_id
      in: path
      description: The numeric ID of the integration hook
      required: true
      schema:
        type: integer
    source_id:
      name: source_id
      in: path
      description: |-
        Id of the session for which the conversation is created.



         Source Ids can be obtained through contactable inboxes API or via generated.<br/><br/>Website: Chatwoot generated string which can be obtained from webhook events. <br/> Phone Channels(Twilio): Phone number in e164 format <br/> Email Channels: Contact Email address <br/> API Channel: Any Random String
      required: true
      schema:
        type: string
    contact_sort_param:
      name: sort
      in: query
      description: The attribute by which list should be sorted
      schema:
        type: string
        enum:
        - name
        - email
        - phone_number
        - last_activity_at
        - -name
        - -email
        - -phone_number
        - -last_activity_at
    conversation_id:
      name: conversation_id
      in: path
      description: The numeric ID of the conversation
      required: true
      schema:
        type: integer
    conversation_uuid:
      name: conversation_uuid
      in: path
      description: The uuid of the conversation
      required: true
      schema:
        type: integer
    custom_filter_id:
      name: custom_filter_id
      in: path
      description: The numeric ID of the custom filter
      required: true
      schema:
        type: integer
    webhook_id:
      name: webhook_id
      in: path
      description: The numeric ID of the webhook
      required: true
      schema:
        type: integer
    message_id:
      name: message_id
      in: path
      description: The numeric ID of the message
      required: true
      schema:
        type: integer
    page:
      name: page
      in: query
      description: The page parameter
      schema:
        type: integer
        default: 1
    platform_user_id:
      name: id
      in: path
      description: The numeric ID of the user on the platform
      required: true
      schema:
        type: integer
    report_type:
      name: type
      in: query
      description: Type of report
      required: true
      schema:
        type: string
        enum:
        - account
        - agent
        - inbox
        - label
        - team
    report_metric:
      name: metric
      in: query
      description: The type of metric
      required: true
      schema:
        type: string
        enum:
        - conversations_count
        - incoming_messages_count
        - outgoing_messages_count
        - avg_first_response_time
        - avg_resolution_time
        - resolutions_count
    public_inbox_identifier:
      name: inbox_identifier
      in: path
      description: The identifier obtained from API inbox channel
      required: true
      schema:
        type: string
    public_contact_identifier:
      name: contact_identifier
      in: path
      description: The source id of contact obtained on contact create
      required: true
      schema:
        type: string
  securitySchemes:
    userApiKey:
      type: apiKey
      description: "This token can be obtained by visiting the profile page or via\
        \ rails console. Provides access to  endpoints based on the user permissions\
        \ levels. This token can be saved by an external system when user is created\
        \ via API, to perform activities on behalf of the user."
      name: api_access_token
      in: header
    agentBotApiKey:
      type: apiKey
      description: This token should be provided by system admin or obtained via rails
        console. This token can be used to build bot integrations and can only access
        limited apis.
      name: api_access_token
      in: header
    platformAppApiKey:
      type: apiKey
      description: "This token can be obtained by the system admin after creating\
        \ a platformApp. This token should be used to provision agent bots, accounts,\
        \ users and their roles."
      name: api_access_token
      in: header
x-tagGroups:
- name: Platform
  tags:
  - Accounts
  - Account Users
  - AgentBots
  - Users
- name: Application
  tags:
  - Account AgentBots
  - Agents
  - Canned Responses
  - Contacts
  - Conversation Assignment
  - Conversation Labels
  - Conversations
  - Custom Attributes
  - Custom Filters
  - Inboxes
  - Integrations
  - Messages
  - Profile
  - Reports
  - Teams
  - Webhooks
  - Automation Rule
  - Help Center
- name: Client
  tags:
  - Contacts API
  - Conversations API
  - Messages API
- name: Others
  tags:
  - CSAT Survey Page
x-original-swagger-version: "2.0"
